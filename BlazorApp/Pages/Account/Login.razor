@page "/account/login"
@using BlazorApp.Models
@using BlazorApp.Services
@using Radzen
@using Radzen.Blazor
@inject AuthService AuthService
@inject NavigationManager Navigation
@inject NotificationService NotificationService

<RadzenCard>
    <h3>Login</h3>
    <RadzenTemplateForm TItem="LoginModel" Data=@model Submit=@OnSubmit>
        <div class="row">
            <div class="col-md-12">
                <RadzenTextBox @bind-Value=@model.Username Placeholder="Username" Style="width: 100%" />
            </div>
        </div>
        <div class="row mt-3">
            <div class="col-md-12">
                <RadzenPassword @bind-Value=@model.Password Placeholder="Password" Style="width: 100%" />
            </div>
        </div>
        <div class="row mt-3">
            <div class="col-md-12">
                <RadzenButton ButtonType="ButtonType.Submit" Text="Login" ButtonStyle="ButtonStyle.Primary" 
                    Style="width: 100%" Disabled=@isBusy />
            </div>
        </div>
        <div class="row mt-2">
            <div class="col-md-12">
                <a href="/account/register">Register</a> | 
                <a href="/account/forgotpassword">Forgot Password?</a>
            </div>
        </div>
    </RadzenTemplateForm>
</RadzenCard>

@code {
    private LoginModel model = new();
    private bool isBusy = false;

    private async Task OnSubmit()
    {
        isBusy = true;
        
        var result = await AuthService.Login(model);
        
        if (result.IsSuccess)
        {
            NotificationService.Notify(new NotificationMessage
            {
                Severity = NotificationSeverity.Success,
                Summary = "Success",
                Detail = "Login successful",
                Duration = 4000
            });
            
            Navigation.NavigateTo("/");
        }
        else
        {
            NotificationService.Notify(new NotificationMessage
            {
                Severity = NotificationSeverity.Error,
                Summary = "Error",
                Detail = result.Message,
                Duration = 4000
            });
        }
        
        isBusy = false;
    }
}